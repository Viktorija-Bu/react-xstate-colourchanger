{"ast":null,"code":"import{send,assign}from\"xstate\";function say(text){return send(_context=>({type:\"SPEAK\",value:text}));}function listen(){return send('LISTEN');}const proxyurl=\"https://cors-anywhere.herokuapp.com/\";const rasaurl='https://viktorija-lab2.herokuapp.com/model/parse';const nluRequest=text=>fetch(new Request(proxyurl+rasaurl,{method:'POST',headers:{'Origin':'http://maraev.me'},// only required with proxy\nbody:\"{\\\"text\\\": \\\"\".concat(text,\"\\\"}\")})).then(data=>data.json());const grammar={\"Donald\":{person:\"Donald Trump\"},\"Joe\":{person:\"Joe Biden\"},\"Barack\":{person:\"Barack Obama\"},\"George\":{person:\"George W. Bush\"},\"Bill\":{person:\"Bill Clinton\"},\"on Monday\":{day:\"Monday\"},\"on Tuesday\":{day:\"Tuesday\"},\"on Wednesday\":{day:\"Wednesday\"},\"on Thursday\":{day:\"Thursday\"},\"on Friday\":{day:\"Friday\"},\"on Saturday\":{day:\"Saturday\"},\"on Sunday\":{day:\"Sunday\"},\"at 7\":{time:\"7:00\"},\"at 8\":{time:\"8:00\"},\"at 9\":{time:\"9:00\"},\"at 10\":{time:\"10:00\"},\"at 11\":{time:\"11:00\"},\"at 12\":{time:\"12:00\"},\"at 1\":{time:\"13:00\"},\"at 2\":{time:\"14:00\"},\"at 3\":{time:\"15:00\"},\"at 4\":{time:\"16:00\"},\"at 5\":{time:\"17:00\"},\"at 6\":{time:\"18:00\"}};const grammar2={\"yes\":{yes:\"yes\"},\"of course\":{yes:\"yes\"},\"sure\":{yes:\"yes\"},\"definitely\":{yes:\"yes\"},\"yeah\":{yes:\"yes\"},\"most likely\":{yes:\"yes\"},\"no\":{no:\"no\"},\"no way\":{no:\"no\"},\"never\":{no:\"no\"},\"no for sure\":{no:\"no\"},\"I don't think so\":{no:\"no\"},\"not likely\":{no:\"no\"}};export const dmMachine={initial:\"start\",states:{start:{on:{CLICK:\"thing_to_do\"}},thing_to_do:{id:\"choose\",initial:\"prompt\",on:{RECOGNISED:[{actions:assign(context=>{return{choice:context.recResult};}),target:\"chosen_thing\"},{target:\".nomatch\"}]},states:{prompt:{entry:say(\"What would you like to do?\"),on:{ENDSPEECH:\"ask\"}},ask:{entry:listen()},nomatch:{entry:say(\"Would you mind repeating?\"),on:{ENDSPEECH:\"ask\"}}}},chosen_thing:{invoke:{id:\"RASA\",src:(context,event)=>nluRequest(context.choice),onDone:{target:\"final\",actions:[assign((context,event)=>{return{res:event.data.intent.name};}),(context,event)=>console.log(event.data)]},onError:{target:\"thing_to_do\",actions:(context,event)=>console.log(event.data)}}},final:{initial:\"prompt\",on:{ENDSPEECH:[{cond:context=>context.res===\"Appointment\",target:\"Appointment\"},{cond:context=>context.res===\"TODO_item\",target:\"TODO_item\"},{cond:context=>context.res===\"Timer\",target:\"Timer\"},{target:\".nomatch\"}]},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"Let me check\"}))},nomatch:{entry:say(\"The task is unavailable\"),on:{ENDSPEECH:\"#choose\"}}}},TODO_item:{initial:\"prompt\",on:{ENDSPEECH:\"thing_to_do\"},states:{prompt:{entry:say(\"Sorry, but this tool does not exist\")}}},Timer:{initial:\"prompt\",on:{ENDSPEECH:\"thing_to_do\"},states:{prompt:{entry:say(\"Sorry, but this tool does not exist\")}}},Appointment:{initial:\"prompt\",on:{ENDSPEECH:\"who\"},states:{prompt:{entry:say(\"Let's create an appointment\")}}},who:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>\"person\"in(grammar[context.recResult]||{}),actions:assign(context=>{return{person:grammar[context.recResult].person};}),target:\"day\"},{target:\".nomatch\"}]},states:{prompt:{entry:say(\"Who are you meeting with?\"),on:{ENDSPEECH:\"ask\"}},ask:{entry:listen()},nomatch:{entry:say(\"Sorry I don't know them\"),on:{ENDSPEECH:\"prompt\"}}}},day:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>\"day\"in(grammar[context.recResult]||{}),actions:assign(context=>{return{day:grammar[context.recResult].day};}),target:\"whole_day\"},{target:\".nomatch\"}]},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"OK. \".concat(context.person,\". On which day is your meeting?\")})),on:{ENDSPEECH:\"ask\"}},ask:{entry:listen()},nomatch:{entry:say(\"Sorry I did not understand\"),on:{ENDSPEECH:\"prompt\"}}}},whole_day:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>\"yes\"in(grammar2[context.recResult]||{}),actions:assign(context=>{return{yes:grammar2[context.recResult].yes};}),target:\"app\"},{cond:context=>\"no\"in(grammar2[context.recResult]||{}),actions:assign(context=>{return{no:grammar2[context.recResult].no};}),target:\"time\"},{target:\".nomatch\"}]},states:{prompt:{entry:say(\"Will it take the whole day?\"),on:{ENDSPEECH:\"ask\"}},ask:{entry:listen()},nomatch:{entry:say(\"Please repeat\"),on:{ENDSPEECH:\"prompt\"}}}},app:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>\"yes\"in(grammar2[context.recResult]||{}),actions:assign(context=>{return{yes:grammar2[context.recResult].yes};}),target:\"done\"},{cond:context=>\"no\"in(grammar2[context.recResult]||{}),actions:assign(context=>{return{no:grammar2[context.recResult].no};}),target:\"who\"},{target:\".nomatch\"}]},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"Do you want me to create an appointment with \".concat(context.person,\" on \").concat(context.day,\" for the whole day?\")})),on:{ENDSPEECH:\"ask\"}},ask:{entry:listen()},nomatch:{entry:say(\"Please repeat\"),on:{ENDSPEECH:\"prompt\"}}}},done:{initial:\"prompt\",on:{ENDSPEECH:\"start\"},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"Your appointment has been created!\"}))}}},time:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>\"time\"in(grammar[context.recResult]||{}),actions:assign(context=>{return{time:grammar[context.recResult].time};}),target:\"app2\"},{target:\".nomatch\"}]},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"\".concat(context.day,\" it is. What time is your meeting?\")})),on:{ENDSPEECH:\"ask\"}},ask:{entry:listen()},nomatch:{entry:say(\"Sorry could you repeat\"),on:{ENDSPEECH:\"prompt\"}}}},app2:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>\"yes\"in(grammar2[context.recResult]||{}),actions:assign(context=>{return{yes:grammar2[context.recResult].yes};}),target:\"done\"},{cond:context=>\"no\"in(grammar2[context.recResult]||{}),actions:assign(context=>{return{no:grammar2[context.recResult].no};}),target:\"who\"},{target:\".nomatch\"}]},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"Do you want me to create an appointment with \".concat(context.person,\" on \").concat(context.day,\" at \").concat(context.time,\"?\")})),on:{ENDSPEECH:\"ask\"}},ask:{entry:listen()},nomatch:{entry:say(\"Please repeat\"),on:{ENDSPEECH:\"prompt\"}}}}}};","map":{"version":3,"sources":["C:/Users/vikto/antras_semis/react-xstate-colourchanger/src/dmAppointment.ts"],"names":["send","assign","say","text","_context","type","value","listen","proxyurl","rasaurl","nluRequest","fetch","Request","method","headers","body","then","data","json","grammar","person","day","time","grammar2","yes","no","dmMachine","initial","states","start","on","CLICK","thing_to_do","id","RECOGNISED","actions","context","choice","recResult","target","prompt","entry","ENDSPEECH","ask","nomatch","chosen_thing","invoke","src","event","onDone","res","intent","name","console","log","onError","final","cond","TODO_item","Timer","Appointment","who","whole_day","app","done","app2"],"mappings":"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","sourcesContent":["import { MachineConfig, send, Action, assign } from \"xstate\";\r\n\r\n\r\nfunction say(text: string): Action<SDSContext, SDSEvent> {\r\n    return send((_context: SDSContext) => ({ type: \"SPEAK\", value: text }))\r\n}\r\n\r\nfunction listen(): Action<SDSContext, SDSEvent> {\r\n    return send('LISTEN')\r\n}\r\n\r\nconst proxyurl = \"https://cors-anywhere.herokuapp.com/\";\r\nconst rasaurl = 'https://viktorija-lab2.herokuapp.com/model/parse'\r\nconst nluRequest = (text: string) =>\r\n    fetch(new Request(proxyurl + rasaurl, {\r\n        method: 'POST',\r\n        headers: { 'Origin': 'http://maraev.me' }, // only required with proxy\r\n        body: `{\"text\": \"${text}\"}`\r\n    }))\r\n        .then(data => data.json());\r\n\r\nconst grammar: { [index: string]: { person?: string, day?: string, time?: string } } = {\r\n    \"Donald\": { person: \"Donald Trump\" }, \r\n    \"Joe\": { person: \"Joe Biden\" },\r\n    \"Barack\": { person: \"Barack Obama\" },\r\n    \"George\": { person: \"George W. Bush\" },\r\n    \"Bill\": { person: \"Bill Clinton\" },\r\n    \"on Monday\": { day: \"Monday\" },\r\n    \"on Tuesday\": { day: \"Tuesday\" },\r\n    \"on Wednesday\": { day: \"Wednesday\" },\r\n    \"on Thursday\": { day: \"Thursday\" },\r\n    \"on Friday\": { day: \"Friday\" },\r\n    \"on Saturday\": { day: \"Saturday\" },\r\n    \"on Sunday\": { day: \"Sunday\" },\r\n    \"at 7\": { time: \"7:00\" },\r\n    \"at 8\": { time: \"8:00\" },\r\n    \"at 9\": { time: \"9:00\" },\r\n    \"at 10\": { time: \"10:00\" },\r\n    \"at 11\": { time: \"11:00\" },\r\n    \"at 12\": { time: \"12:00\" },\r\n    \"at 1\": { time: \"13:00\" },\r\n    \"at 2\": { time: \"14:00\" },\r\n    \"at 3\": { time: \"15:00\" },\r\n    \"at 4\": { time: \"16:00\" },\r\n    \"at 5\": { time: \"17:00\" },\r\n    \"at 6\": { time: \"18:00\" },\r\n}\r\n\r\nconst grammar2: { [index: string]: { yes?: string, no?: string } } = { \r\n    \"yes\": { yes: \"yes\" },\r\n    \"of course\": { yes: \"yes\" },\r\n    \"sure\": { yes: \"yes\" },\r\n    \"definitely\": { yes: \"yes\" },\r\n    \"yeah\": { yes: \"yes\" },\r\n    \"most likely\": { yes: \"yes\" },\r\n    \"no\": { no: \"no\" },\r\n    \"no way\": { no: \"no\" },\r\n    \"never\": { no: \"no\" },\r\n    \"no for sure\": { no: \"no\" },\r\n    \"I don't think so\": { no: \"no\" },\r\n    \"not likely\": { no: \"no\" },\r\n}\r\n\r\nexport const dmMachine: MachineConfig<SDSContext, any, SDSEvent> = ({\r\n    initial: \"start\",\r\n    states: {\r\n        start:{\r\n            on: {\r\n                CLICK: \"thing_to_do\"\r\n            }\r\n        },\r\n        thing_to_do:{\r\n            id: \"choose\",\r\n            initial: \"prompt\",\r\n            on: {\r\n                RECOGNISED:[{\r\n                    actions: assign((context) => { return { choice: context.recResult } }),\r\n                    target: \"chosen_thing\" },\r\n                \r\n                { target: \".nomatch\" }]\r\n            },\r\n            states:{\r\n                prompt: { entry: say(\"What would you like to do?\"),\r\n                        on: { ENDSPEECH: \"ask\" }\r\n                },\r\n                ask: {\r\n                    entry: listen()\r\n                },\r\n                nomatch: { entry: say(\"Would you mind repeating?\"),\r\n                on: { ENDSPEECH: \"ask\" }}\r\n            }\r\n        },\r\n        chosen_thing:{\r\n            invoke: {\r\n                id: \"RASA\",\r\n                src: (context, event) =>  nluRequest(context.choice),\r\n                onDone:{\r\n                    target: \"final\",\r\n                    actions:[\r\n                        assign((context, event) => { return { res: event.data.intent.name} }),\r\n                        (context:SDSContext, event:any) => console.log(event.data)]\r\n                },\r\n                onError:{\r\n                    target: \"thing_to_do\",\r\n                    actions: (context, event) => console.log(event.data)\r\n\r\n                }\r\n\r\n            }\r\n\r\n        },\r\n        final:{\r\n            initial: \"prompt\",\r\n            on:{\r\n                ENDSPEECH:[{\r\n                    cond: (context) => context.res === \"Appointment\",\r\n                    target: \"Appointment\" },\r\n                    { cond: (context) => context.res === \"TODO_item\",\r\n                    target: \"TODO_item\" },\r\n                    { cond: (context) => context.res === \"Timer\",\r\n                    target: \"Timer\" },\r\n                { target: \".nomatch\" }]\r\n            },\r\n            states: {\r\n                prompt: {\r\n                    entry: send((context) => ({\r\n                        type: \"SPEAK\",\r\n                        value: `Let me check`}))},\r\n                nomatch: {\r\n                    entry: say(\"The task is unavailable\"),\r\n                    on: { ENDSPEECH: \"#choose\" }\r\n                        \r\n                    }\r\n                        \r\n                }\r\n\r\n        },\r\n        TODO_item: {\r\n            initial: \"prompt\",\r\n            on: { ENDSPEECH: \"thing_to_do\" },\r\n            states:{\r\n                prompt:{\r\n                    entry: say(\"Sorry, but this tool does not exist\")\r\n                }\r\n            }\r\n        },\r\n        Timer: {\r\n            initial: \"prompt\",\r\n            on: { ENDSPEECH: \"thing_to_do\" },\r\n            states:{\r\n                prompt:{\r\n                    entry: say(\"Sorry, but this tool does not exist\")\r\n                }\r\n            }\r\n        },\r\n        Appointment:{\r\n            initial: \"prompt\",\r\n            on:{ ENDSPEECH: \"who\" },\r\n            states:{\r\n                prompt:{\r\n                    entry: say(\"Let's create an appointment\")\r\n                }\r\n            }\r\n        },\r\n        who: {\r\n            initial: \"prompt\",\r\n            on: {\r\n                RECOGNISED: [{\r\n                    cond: (context) => \"person\" in (grammar[context.recResult] || {}),\r\n                    actions: assign((context) => { return { person: grammar[context.recResult].person } }),\r\n                    target: \"day\"\r\n\r\n                },\r\n                { target: \".nomatch\" }]\r\n            },\r\n            states: {\r\n                prompt: {\r\n                    entry: say(\"Who are you meeting with?\"),\r\n                    on: { ENDSPEECH: \"ask\" }\r\n                },\r\n                ask: {\r\n                    entry: listen()\r\n                },\r\n                nomatch: {\r\n                    entry: say(\"Sorry I don't know them\"),\r\n                    on: { ENDSPEECH: \"prompt\" }\r\n                }\r\n            }\r\n        },\r\n        day: {\r\n            initial: \"prompt\",\r\n            on: {\r\n                RECOGNISED: [{\r\n                    cond: (context) => \"day\" in (grammar[context.recResult] || {}),\r\n                    actions: assign((context) => { return { day: grammar[context.recResult].day } }),\r\n                    target: \"whole_day\"\r\n                \r\n                },\r\n                { target: \".nomatch\" }]\r\n            },\r\n            states: {\r\n                prompt: {\r\n                    entry: send((context) => ({\r\n                        type: \"SPEAK\",\r\n                        value: `OK. ${context.person}. On which day is your meeting?`   \r\n                    })),\r\n                    on: { ENDSPEECH: \"ask\" }\r\n                },\r\n                ask: {\r\n                    entry: listen()\r\n                },\r\n                nomatch: {\r\n                    entry: say(\"Sorry I did not understand\"),\r\n                    on: { ENDSPEECH: \"prompt\" }\r\n                } \r\n            }\r\n        },\r\n        whole_day: {\r\n            initial: \"prompt\",\r\n            on: {\r\n                RECOGNISED: [{\r\n                    cond: (context) => \"yes\" in (grammar2[context.recResult] || {}),\r\n                    actions: assign((context) => { return { yes: grammar2[context.recResult].yes } }),\r\n                    target: \"app\" },\r\n                    { cond: (context) => \"no\" in (grammar2[context.recResult] || {}),\r\n                    actions: assign((context) => { return { no: grammar2[context.recResult].no } }),\r\n                    target: \"time\" },\r\n\r\n                { target: \".nomatch\" }]\r\n            },\r\n            states: {\r\n                prompt: {\r\n                    entry: say(\"Will it take the whole day?\"),\r\n                    on: { ENDSPEECH: \"ask\" }\r\n                },\r\n                ask: {\r\n                    entry: listen()\r\n                },\r\n                nomatch: {\r\n                    entry: say(\"Please repeat\"),\r\n                    on: { ENDSPEECH: \"prompt\" }\r\n                }\r\n            }\r\n        },\r\n        app: {\r\n            initial: \"prompt\",\r\n            on: {\r\n                RECOGNISED: [{\r\n                    cond: (context) => \"yes\" in (grammar2[context.recResult] || {}),\r\n                    actions: assign((context) => { return { yes: grammar2[context.recResult].yes } }),\r\n                    target: \"done\" },\r\n                    { cond: (context) => \"no\" in (grammar2[context.recResult] || {}),\r\n                    actions: assign((context) => { return { no: grammar2[context.recResult].no } }),\r\n                    target: \"who\" },\r\n\r\n                { target: \".nomatch\" }]\r\n            },\r\n            states: {\r\n                prompt: {\r\n                    entry: send((context) => ({\r\n                        type: \"SPEAK\",\r\n                        value: `Do you want me to create an appointment with ${context.person} on ${context.day} for the whole day?`   \r\n                    })),\r\n                    on: { ENDSPEECH: \"ask\" }\r\n                },\r\n                ask: {\r\n                    entry: listen()\r\n                },\r\n                nomatch: {\r\n                    entry: say(\"Please repeat\"),\r\n                    on: { ENDSPEECH: \"prompt\" }\r\n                }\r\n            }\r\n        },\r\n        done: {\r\n            initial: \"prompt\",\r\n            on: { ENDSPEECH: \"start\" },\r\n            states: {\r\n                prompt: {\r\n                    entry: send((context) => ({\r\n                        type: \"SPEAK\",\r\n                        value: `Your appointment has been created!`\r\n                    }))\r\n                }\r\n            }\r\n        },\r\n        time: {\r\n            initial: \"prompt\",\r\n            on: {\r\n                RECOGNISED: [{\r\n                    cond: (context) => \"time\" in (grammar[context.recResult] || {}),\r\n                    actions: assign((context) => { return { time: grammar[context.recResult].time } }),\r\n                    target: \"app2\"\r\n\r\n                },\r\n                { target: \".nomatch\" }]\r\n            },\r\n            states: {\r\n                prompt: {\r\n                    entry: send((context) => ({\r\n                        type: \"SPEAK\",\r\n                        value: `${context.day} it is. What time is your meeting?`   \r\n                    })),\r\n                    on: { ENDSPEECH: \"ask\" }\r\n                },\r\n                ask: {\r\n                    entry: listen()\r\n                },\r\n                nomatch: {\r\n                    entry: say(\"Sorry could you repeat\"),\r\n                    on: { ENDSPEECH: \"prompt\" }\r\n                }\r\n            }\r\n        },\r\n        app2: {\r\n            initial: \"prompt\",\r\n            on: {\r\n                RECOGNISED: [{\r\n                    cond: (context) => \"yes\" in (grammar2[context.recResult] || {}),\r\n                    actions: assign((context) => { return { yes: grammar2[context.recResult].yes } }),\r\n                    target: \"done\" },\r\n                    { cond: (context) => \"no\" in (grammar2[context.recResult] || {}),\r\n                    actions: assign((context) => { return { no: grammar2[context.recResult].no } }),\r\n                    target: \"who\" },\r\n\r\n                { target: \".nomatch\" }]\r\n            },\r\n            states: {\r\n                prompt: {\r\n                    entry: send((context) => ({\r\n                        type: \"SPEAK\",\r\n                        value: `Do you want me to create an appointment with ${context.person} on ${context.day} at ${context.time}?`   \r\n                    })),\r\n                    on: { ENDSPEECH: \"ask\" }\r\n                },\r\n                ask: {\r\n                    entry: listen()\r\n                },\r\n                nomatch: {\r\n                    entry: say(\"Please repeat\"),\r\n                    on: { ENDSPEECH: \"prompt\" }\r\n                }\r\n            }\r\n        },\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}